---
import { Icon } from 'astro-icon/components';
import { techData } from '../data/techData';
import '../styles/icons.css';

interface TechItem {
    name: string;
    class: string;
    category: string;
    title: string;
}

type GroupedTechs = {
    [key: string]: TechItem[];
};

const groupedTechs: GroupedTechs = techData.reduce((acc: GroupedTechs, tech: TechItem) => {
    acc[tech.category] = acc[tech.category] || [];
    acc[tech.category].push(tech);
    return acc;
}, {});

---

<section class="w-full min-h-screen bg-black border-white border-dashed border-2 lg:border-[0.5rem] rounded-4xl mt-25 px-5 py-10 md:motion-translate-y-in-100 md:motion-delay-400 md:motion-opacity-in-0" id="about">
    <h3 class="text-5xl font-extrabold text-center mt-5 md:motion-translate-x-in-25 md:motion-delay-400">About me</h3>
    <p class="text-center md:motion-translate-x-in-50 md:motion-delay-400">
        <span class="font-medium">Software Engineering Student</span> & <span class="font-medium">Web Developer</span>
    </p>

    <div class="mx-auto max-w-5xl"> 
        {
            Object.entries(groupedTechs).map(([category, techs]) => (
                <div class="mt-10">
                    <h4 class="text-xl my-5 text-center">{category}</h4>
                    <div class="flex flex-wrap justify-center gap-8">
                        {techs.map((tech: TechItem) => (
                            <div class="flex flex-col items-center group">
                                <Icon name={tech.name} class={tech.class} />
                                <p class="text-white text-sm mt-2 opacity-100 md:opacity-0 group-hover:opacity-100 transition-opacity duration-300">{tech.title}</p>
                            </div>
                        ))}
                    </div>
                </div>
            ))
        }
    </div>
</section>
